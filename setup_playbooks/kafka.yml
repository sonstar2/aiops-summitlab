---
- name: Deploy a Kafka container with Podman using KRaft mode
  hosts: all
  become: true
  vars:
    kafka_container_name: cp-kafka
    kafka_image: "docker.io/apache/kafka"
    kafka_port: 9092
    kafka_controller_port: 9093
    kafka_path: "/opt/kafka/bin/"
    kafka_topic: "httpd-error-logs"

  tasks:
    - name: Ensure required packages are installed
      ansible.builtin.package:
        name:
          - podman
          - python3-podman
        state: present

    - name: Pull Kafka image to ensure availability
      ansible.builtin.command:
        cmd: "podman pull {{ kafka_image }}"
      changed_when: false


    - name: Create Kafka data volume
      containers.podman.podman_volume:
        name: kafka_data

    - name: Start Apache Kafka container
      containers.podman.podman_container:
        name: "{{ kafka_container_name }}"
        image: "{{ kafka_image }}"
        hostname: "{{ kafka_container_name }}"
        state: started
        restart_policy: always
        memory: 2g
        ports:
          - "9092:9092"
          - "9093:9093"
        env:
          KAFKA_NODE_ID: "1"
          KAFKA_PROCESS_ROLES: "broker,controller"
          KAFKA_LISTENERS: "PLAINTEXT://:9092,CONTROLLER://:9093"
          KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://service1:9092"
          KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
          KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT"
          KAFKA_CONTROLLER_QUORUM_VOTERS: "1@localhost:9093"
          KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: "1"
          KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: "1"
          KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: "1"
          KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: "0"
          KAFKA_NUM_PARTITIONS: "3"

   ## Some tests below to list out topics, and create a test-topic if nothing exists
    - name: List Kafka topics
      ansible.builtin.command:
        cmd: "podman exec {{ kafka_container_name }} /{{ kafka_path }}/kafka-topics.sh --list --bootstrap-server localhost:9092"
      register: topic_list
      changed_when: false
      retries: 5
      delay: 5
      until: topic_list.rc == 0

    - name: Debug Kafka Topics
      ansible.builtin.debug:
        msg:
          - topic_list.stdout_lines "{{ topic_list.stdout_lines }}"
          - topic_list.stdout "{{ topic_list.stdout_lines }}"

    - name: Push a Kafka topic
      ansible.builtin.command:
        cmd: "podman exec {{ kafka_container_name }} /{{ kafka_path }}/kafka-topics.sh --create --topic {{ kafka_topic }} --bootstrap-server localhost:9092 --partitions 1 --replication-factor 1"
      register: push_topic
      changed_when: false
      retries: 5
      delay: 5
      until: push_topic.rc == 0
      when: kafka_topic not in topic_list.stdout_lines and kafka_topic not in topic_list.stdout

    - name: List Kafka topics
      ansible.builtin.command:
        cmd: "podman exec {{ kafka_container_name }} /{{ kafka_path }}/kafka-topics.sh --list --bootstrap-server localhost:9092"
      register: topic_list_2
      changed_when: false
      retries: 5
      delay: 5
      until: topic_list_2.rc == 0
      when: kafka_topic not in topic_list.stdout_lines and kafka_topic not in topic_list.stdout

    - name: Debug Kafka Topics
      ansible.builtin.debug:
        msg:
          - topic_list.stdout_lines "{{ topic_list.stdout_lines }}"
          - topic_list.stdout "{{ topic_list.stdout_lines }}"
      when: kafka_topic not in topic_list.stdout_lines and kafka_topic not in topic_list.stdout
